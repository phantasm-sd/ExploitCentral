import binascii

packet = "5aa3bc00347f7fa3036e5f0010000000050f00001c980b3a1db110400303000000000601000001000ec008ffff0000000000000000000000020d"
def get_data_bytes():
    data_bytes = packet[6:-2]
    print("data_bytes", data_bytes)
    return (data_bytes)

def crc16(data, offset, length):
    if data is None or offset < 0 or offset > len(data) - 1 and offset+length > len(data):
        return 0
    crc = 0x0000
    for i in (range(0, length)):
        # crc = crc << 8
        crc ^= data[i]
        # print(hex(data[i]))
        #print(bin(crc))
        for j in range(0, 8):
            if (crc & 0x0001) > 0:
                crc = (crc >> 1) ^ 0xA001
            else:
                crc = crc >> 1

    
    #print(bin(crc))
    # print(bin(0xFFFF))
    return crc


if __name__ == "__main__":

    print(hex(crc16(get_data_bytes().encode(), 0 ,8       )))