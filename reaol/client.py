#!/usr/bin/python3
# PyAOL Client 
# Sends INIT data to server
# Server responds
# Sends Auth as Guest
# Server responds with Welcome Screen
# Sends SignOff pE packet
# Listens for ACK from Server
# ~phantasm
import codecs
import socket
import sys

HOST, PORT = "americaonline.reaol.org", 5190
#HOST, PORT = "localhost", 5190
#data1 = "5A413800347F7FA3036B0100F5000000050F00002152CBCA070A1000080400000000035F0000010004000300080000000000000000000000020D\n"
data1 = "5aa3bc00347f7fa3036e5f0010000000050f00001c980b3a1db110400303000000000601000001000ec008ffff0000000000000000000000020d\n"
hex_data1 = bytes.fromhex(data1)
data2 = "5af102003c1010a044640016000100010a0400000001010b040000000203010a47756573742020202020011d00011d00010a040000000203010120011d000002000d\n"
hex_data2 = bytes.fromhex(data2)
signoff = "5a602900181111a0704500ce00010001070400000006000e01140002000d\n"
hex_signoff = bytes.fromhex(signoff)

print(hex_data1)
print(hex_data2)
print(hex_signoff)


def get_data(sock):
    data = sock.recv(1024)
    return data

# Create a socket (SOCK_STREAM means a TCP socket)
with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as sock:
    # Connect to server and send data
    sock.connect((HOST, PORT))
    sock.sendall(hex_data1)

    # Receive data from the server and shut down
    #received1 = str(sock.recv(1024), "utf-8")
    received1 = get_data(sock)
    sock.sendall(hex_data2)
    received2 = get_data(sock)

    sock.sendall(hex_signoff)
    received3 = get_data(sock)
# Listen one more time for any other data after pE
    received4 = get_data(sock)

print("Sent1:     {}".format(data1))
print("Received1: {}".format(received1))
print("Sent2:     {}".format(data2))
print("Received2: {}".format(received2))
print("SignOff:   {}".format(signoff))
print("Received3: {}".format(received3))
print("Received4: {}".format(received4))
